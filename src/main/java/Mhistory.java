
import java.io.IOException;
import java.time.format.DateTimeFormatter;

import net.dv8tion.jda.core.entities.Message;
import net.dv8tion.jda.core.events.message.MessageDeleteEvent;

public class Mhistory {
    static String filePath = "C:/Archive/discord.txt";
    public static int numOn = 0;
    public static void record(Message m) {
        if(m.getGuild().getName().equalsIgnoreCase("NHS") || m.getGuild().getName().equalsIgnoreCase("Testing")|| m.getGuild().getName().equalsIgnoreCase("testII")) {
            if(numOn >= hs.length - 1) {
                numOn = 0;
            }
            hs[numOn] = m;
            System.out.println("logged: " + m.getContentRaw() + " | " + m.getAuthor().getName() + " | "+ m.getGuild().getName() + "-" + m.getChannel().getName() + " | " + m.getCreationTime().format(DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm a")) + " | " + m.getId());
            try {
                WriteFile data = new WriteFile( filePath , true );
                data.writeToFile(m.getContentRaw() + " | " + m.getAuthor().getName() + " | "+ m.getGuild().getName() + "-" + m.getChannel().getName() + " | " + m.getCreationTime().format(DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm a")) + " | " + m.getId());
            }catch(IOException e) {
                //System.out.println(e.getMessage());
            }


            numOn++;
        } else {
            System.out.println("saw: " + m.getContentRaw() + " | " + m.getAuthor().getName() + " | "+ m.getGuild().getName() + "-" + m.getChannel().getName() + " | " + numOn);
        }
    }
    public static Message fetch(String msgId) {
        Message msg = null;
        Message[] msgs = hs;
        for(int i = 0; i < hs.length - 1; i++) {
            if(msgs[i] !=null) {
                if(msgs[i].getId().equals(msgId)) {
                    msg = msgs[i];
                    return msg;
                }
            }
        }
        return null;
    }
    public static Message[] hs = {
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null};
}